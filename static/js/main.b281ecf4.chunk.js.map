{"version":3,"sources":["img/cart-2.svg","data/inventory-data.js","components/credentials.jsx","components/shopping-cart.js","components/product-item.jsx","components/products.jsx","components/product.jsx","components/contact.jsx","components/login.jsx","components/notfound.jsx","components/app-header.jsx","components/app-footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","InventoryData","ITEMS","productsData","map","item","i","id","ITEMS_NAME_AZ","slice","sort","a","b","name","localeCompare","ITEMS_NAME_ZA","reverse","ITEMS_PRICE_LOHI","price","ITEMS_PRICE_HILO","Credentials","username","password","VALID_PASSWORD","VALID_USERNAMES","indexOf","window","sessionStorage","setItem","getItem","ShoppingCart","itemId","curContents","getCartContents","push","setCartContents","itemIndex","splice","JSON","parse","newContents","stringify","LISTENERS","forEach","curListener","forceUpdate","removeItem","handler","ProductItem","props","state","image_url","desc","itemInCart","isItemInCart","isProblemUser","addItem","this","setState","console","log","linkId","itemLink","img_url","className","href","src","onClick","addToCart","React","Component","Products","isPerformanceGlitchUser","startPerformanceGlitch","inventoryList","sortByOption","bind","sortNameAZ","sortNameZA","sortPriceLoHi","sortPriceHiLo","duration","start","Date","getTime","event","target","value","onChange","key","Product","inventoryId","match","params","length","history","back","goBack","Contact","Login","error","handlePassChange","handleUserChange","handleSubmit","evt","preventDefault","verifyCredentials","isLockedOutUser","location","onSubmit","class","data-test","type","placeholder","autoCorrect","autoCapitalize","NotFound","AppHeader","Navbar","collapseOnSelect","expand","bg","variant","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","cartIcon","width","height","alt","NavDropdown","title","drop","Item","Divider","AppFooter","App","exact","path","component","Notfound","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b281ecf4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cart-2.a0e76b8e.svg\";","import productsData from './products.json';\nexport class InventoryData {}\n\nInventoryData.ITEMS = productsData;\n\nInventoryData.ITEMS.map((item, i) => {\n  // Dynamically map our item IDs based on their positions in the item array\n  item.id = i;\n});\n\nInventoryData.ITEMS_NAME_AZ = InventoryData.ITEMS.slice().sort(function(a, b) {\n  return a.name.localeCompare(b.name);\n});\n\nInventoryData.ITEMS_NAME_ZA = InventoryData.ITEMS_NAME_AZ.slice().reverse();\n\n\nInventoryData.ITEMS_PRICE_LOHI = InventoryData.ITEMS.slice().sort(function(a, b) {\n  return a.price - b.price;\n});\n\nInventoryData.ITEMS_PRICE_HILO = InventoryData.ITEMS_PRICE_LOHI.slice().reverse();\n","export class Credentials {\n\n  static verifyCredentials(username, password) {\n\tif (password !== Credentials.VALID_PASSWORD) {\n\t  return false;\n\t}\n\t\n\tif (Credentials.VALID_USERNAMES.indexOf(username) < 0) {\n\t  return false;\n\t}\n\n\t// If we're here, we had a valid username and password.\n\t// Store the username in our session storage.\n\twindow.sessionStorage.setItem('session-username', username);\n\n\treturn true;\n  }\n\n  static isLockedOutUser() {\n    return window.sessionStorage.getItem('session-username') === \"locked_out_user\";\n  }\n\n  static isProblemUser() {\n    return window.sessionStorage.getItem('session-username') === \"problem_user\";\n  }\n\n  static isPerformanceGlitchUser() {\n    return window.sessionStorage.getItem('session-username') === \"performance_glitch_user\";\n  }\n}\n\nCredentials.VALID_USERNAMES = [\n  \"standard_user\",\n  \"locked_out_user\",\n  \"problem_user\",\n  \"performance_glitch_user\"\n];\n\nCredentials.VALID_PASSWORD = \"secret_sauce\";\n\n","export class ShoppingCart {\n\n  static addItem(itemId) {\n    // pull out our current cart contents\n    var curContents = ShoppingCart.getCartContents();\n\n    if (curContents.indexOf(itemId) < 0) {\n      // Item's not yet present - add it now\n      curContents.push(itemId);\n\n      // We modified our cart, so store it now\n      ShoppingCart.setCartContents(curContents);\n    }\n  }\n\n  static removeItem(itemId) {\n    // pull out our current cart contents\n    var curContents = ShoppingCart.getCartContents();\n    var itemIndex = curContents.indexOf(itemId);\n\n    if (itemIndex >= 0) {\n      // Remove this item from the array\n      curContents.splice(itemIndex, 1);\n\n      // We modified our cart, so store it now\n      ShoppingCart.setCartContents(curContents);\n    }\n  }\n\n  static isItemInCart(itemId) {\n    // pull out our current cart contents\n    var curContents = ShoppingCart.getCartContents();\n    \n    // If the item is in the array, return true\n    return (curContents.indexOf(itemId) >= 0);\n  }\n\n  static getCartContents() {\n    // pull out our current cart contents\n    var curContents = window.sessionStorage.getItem('cart-contents');\n\n    // Make an empty list if this is the first item\n    if (curContents == null) {\n      curContents = [];\n    } else {\n      // We have an existing cart, so deserialize it now since localStorage stores in JSON strings\n      curContents = JSON.parse(curContents);\n    }\n\n    return curContents;\n  }\n\n  static setCartContents(newContents) {\n    window.sessionStorage.setItem('cart-contents', JSON.stringify(newContents));\n    \n    // Notify our listeners\n    ShoppingCart.LISTENERS.forEach((curListener) => {\n      curListener.forceUpdate();\n    });\n  }\n\n  static resetCart() {\n    window.sessionStorage.removeItem('cart-contents');\n    \n    // Notify our listeners\n    ShoppingCart.LISTENERS.forEach((curListener) => {\n      curListener.forceUpdate();\n    });\n  }\n\n  static registerCartListener(handler) {\n    ShoppingCart.LISTENERS.push(handler);\n  }\n}\n\nShoppingCart.LISTENERS = [];","import React from 'react'\nimport { InventoryData } from '../data/inventory-data';\nimport { Credentials } from './credentials';\nimport { ShoppingCart } from './shopping-cart';\n\nexport default class ProductItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.id,\n      image_url: props.image_url,\n      name: props.name,\n      desc: props.desc,\n      price: props.price,\n      // Set our initial state now\n      itemInCart: ShoppingCart.isItemInCart(props.id)\n    };\n\n    if (Credentials.isProblemUser()) {\n      this.state.image_url = `${this.state.image_url}WithGarbageOnItToBreakTheUrl`\n    }\n  }\n\n  addToCart(itemId) {\n\n    if (Credentials.isProblemUser()) {\n      // Bail out now, don't add to cart if the item ID is odd\n      if (itemId % 2 == 1) {\n        return;\n      }\n    }\n\n    ShoppingCart.addItem(itemId);\n    this.setState({ itemInCart: true });\n    console.log(ShoppingCart.getCartContents());\n  }\n\n  removeFromCart(itemId) {\n\n    if (Credentials.isProblemUser()) {\n      // Bail out now, don't remove from cart if the item ID is even\n      if (itemId % 2 == 0) {\n        return;\n      }\n    }\n\n    ShoppingCart.removeItem(itemId);\n    this.setState({ itemInCart: false });\n    console.log(ShoppingCart.getCartContents());\n  }\n\n  render() {\n\n    var linkId = this.state.id;\n    if (Credentials.isProblemUser()) {\n      linkId += 1;\n    }\n    var itemLink = `./product/${linkId}`;\n    var img_url = `./img/products/${this.state.image_url}`;\n    return (\n      <div className=\"inventory_item\">\n        <div className=\"inventory_item_img\">\n          <a href={itemLink} id={`item_${this.state.id}_img_link`}>\n            <img className=\"inventory_item_img\" src={img_url} />\n          </a>\n        </div>\n        <div className=\"inventory_item_label\">\n          <a href={itemLink} id={`item_${this.state.id}_title_link`}>\n            <div className=\"inventory_item_name\">{this.state.name}</div>\n          </a>\n          <div className=\"inventory_item_desc\">{this.state.desc}</div>\n        </div>\n        <div className=\"pricebar\">\n          <div className=\"inventory_item_price\">${this.state.price}</div>\n          <button className=\"btn_primary btn_inventory\" onClick={() => this.addToCart(this.state.id)}>ADD TO CART</button>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { InventoryData } from '../data/inventory-data';\nimport { Credentials } from './credentials';\nimport { ShoppingCart } from './shopping-cart';\nimport ProductItem from './product-item'\n\nexport default class Products extends React.Component {\n  constructor(props) {\n    super(props);\n    if (Credentials.isPerformanceGlitchUser()) {\n      this.startPerformanceGlitch(5000);\n    }\n\n    this.state = {\n      inventoryList: InventoryData.ITEMS_NAME_AZ\n    };\n\n    this.sortByOption = this.sortByOption.bind(this);\n    this.sortNameAZ = this.sortNameAZ.bind(this);\n    this.sortNameZA = this.sortNameZA.bind(this);\n    this.sortPriceLoHi = this.sortPriceLoHi.bind(this);\n    this.sortPriceHiLo = this.sortPriceHiLo.bind(this);\n  }\n\n  startPerformanceGlitch(duration) {\n    const start = new Date().getTime();\n    while (new Date().getTime() < start + duration) {\n      // PageLoad increases\n    }\n  }\n\n  sortByOption(event) {\n\n    console.log(event);\n\n    if (Credentials.isProblemUser()) {\n      // Bail out now if we're problem user so that we have a behaviour which is broken in Chrome only for sort.\n      // select option onclick is not supported in Chrome but works in IE and FF\n      return;\n    }\n\n    switch (event.target.value) {\n      case \"az\":\n\n        this.setState({\n          inventoryList: InventoryData.ITEMS_NAME_AZ\n        });\n        break;\n\n      case \"za\":\n\n        this.setState({\n          inventoryList: InventoryData.ITEMS_NAME_ZA\n        });\n        break;\n\n      case \"hilo\":\n\n        this.setState({\n          inventoryList: InventoryData.ITEMS_PRICE_HILO\n        });\n        break;\n\n      case \"lohi\":\n\n        this.setState({\n          inventoryList: InventoryData.ITEMS_PRICE_LOHI\n        });\n        break;\n    }\n  }\n\n  sortNameAZ() {\n    if (!Credentials.isProblemUser()) {\n      // Bail out now if we're not problem user - the select onchange will handle the sort\n      return;\n    }\n\n    this.setState({\n      inventoryList: InventoryData.ITEMS_NAME_AZ\n    });\n  }\n\n  sortNameZA() {\n    if (!Credentials.isProblemUser()) {\n      // Bail out now if we're not problem user - the select onchange will handle the sort\n      return;\n    }\n\n    this.setState({\n      inventoryList: InventoryData.ITEMS_NAME_ZA\n    });\n  }\n\n  sortPriceLoHi() {\n    if (!Credentials.isProblemUser()) {\n      // Bail out now if we're not problem user - the select onchange will handle the sort\n      return;\n    }\n\n    this.setState({\n      inventoryList: InventoryData.ITEMS_PRICE_LOHI\n    });\n  }\n\n  sortPriceHiLo() {\n    if (!Credentials.isProblemUser()) {\n      // Bail out now if we're not problem user - the select onchange will handle the sort\n      return;\n    }\n\n    this.setState({\n      inventoryList: InventoryData.ITEMS_PRICE_HILO\n    });\n  }\n\n  render() {\n\n    // NOTE: Sorting is broken on Chrome and Safari\n    // https://stackoverflow.com/questions/9972280/onclick-on-option-tag-not-working-on-ie-and-chrome/10058960#10058960\n    // TODO: Convert this in to a case for problem_user\n\n    return (\n      <div>\n        <div className=\"header_secondary_container\">\n\n          <div id=\"searchbox_container\"></div>\n          <div id=\"inventory_filter_container\">\n            <div className=\"product_label\">Products</div>\n            <select onChange={this.sortByOption} className=\"product_sort_container\">\n              <option value=\"az\" onClick={this.sortNameAZ}>Name (A to Z)</option>\n              <option value=\"za\" onClick={this.sortNameZA}>Name (Z to A)</option>\n              <option value=\"lohi\" onClick={this.sortPriceLoHi}>Price (low to high)</option>\n              <option value=\"hilo\" onClick={this.sortPriceHiLo}>Price (high to low)</option>\n            </select>\n          </div>\n        </div>\n\n        <div id=\"inventory_container\" className=\"inventory_container\">\n\n          <div className=\"inventory_list\">\n            {this.state.inventoryList.map((item, i) => {\n              return (<ProductItem key={item.id} id={item.id} image_url={item.image_url} name={item.name} desc={item.desc} price={item.price} />)\n            })}\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react'\nimport { InventoryData } from '../data/inventory-data';\nimport { Credentials } from './credentials';\nimport { ShoppingCart } from './shopping-cart';\n\nexport default class Product extends React.Component {\n  constructor(props) {\n    super(props);\n    const { params } = this.props.match\n\n    var inventoryId = -1;\n    inventoryId = params.id\n\n    if ((inventoryId >= 0) && (InventoryData.ITEMS.length > inventoryId)) {\n      this.item = InventoryData.ITEMS[inventoryId];\n    } else {\n      this.item = {\n        name: 'PRODUCT NOT FOUND',\n        desc: '',\n        image_url: './img/product-not-found.jpg',\n        price: ''\n\n      };\n    }\n    this.item.id = inventoryId;\n\n    this.state = {\n      // Set our initial state now\n      itemInCart: ShoppingCart.isItemInCart(inventoryId)\n    };\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  addToCart(itemId) {\n\n    if (Credentials.isProblemUser()) {\n      // Bail out now, don't add to cart if the item ID is odd\n      if (itemId % 2 == 1) {\n        return;\n      }\n    }\n\n    ShoppingCart.addItem(itemId);\n    this.setState({ itemInCart: true });\n    console.log(ShoppingCart.getCartContents());\n  }\n\n  removeFromCart(itemId) {\n\n    if (Credentials.isProblemUser()) {\n      // Bail out now, don't remove from cart if the item ID is even\n      if (itemId % 2 == 0) {\n        return;\n      }\n    }\n\n    ShoppingCart.removeItem(itemId);\n    this.setState({ itemInCart: false });\n    console.log(ShoppingCart.getCartContents());\n  }\n\n  render() {\n    return (\n      <div className=\"inventory_details\">\n        <button className=\"inventory_details_back_button\" onClick={this.goBack}>&lt;- Back</button>\n        <div className=\"inventory_details_container\">\n          <img className=\"inventory_details_img\" src={this.item.image_url} />\n          <div className=\"inventory_details_desc_container\">\n            <div className=\"inventory_details_name\">{this.item.name}</div>\n            <div className=\"inventory_details_desc\">{this.item.desc}</div>\n            <div className=\"inventory_details_price\">${this.item.price}</div>\n            <button className=\"btn_primary btn_inventory\" onClick={() => this.addToCart(this.item.id)}>ADD TO CART</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react'\nclass Contact extends React.Component {\n  render() {\n    return <h1>Contact</h1>\n  }\n}\nexport default Contact","import React, { Component } from 'react';\nimport '../css/login.css';\nimport { Credentials } from './credentials.jsx';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            error: ''\n        };\n\n        this.handlePassChange = this.handlePassChange.bind(this);\n        this.handleUserChange = this.handleUserChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(evt) {\n        evt.preventDefault();\n\n        if (!this.state.username) {\n            return this.setState({ error: 'Please fill in the username!' });\n        }\n\n        if (!this.state.password) {\n            return this.setState({ error: 'Please fill in the password!' });\n        }\n\n        if (Credentials.verifyCredentials(this.state.username, this.state.password)) {\n            if (Credentials.isLockedOutUser()) {\n                return this.setState({ error: 'The user has been locked out.' });\n            }\n\n            // If we're here, we have a username and password. Redirect!\n            window.location.href = './products';\n        } else {\n            return this.setState({ error: 'Incorrect username or password!' });\n        }\n\n        return '';\n    }\n\n    handleUserChange(evt) {\n        this.setState({\n            username: evt.target.value,\n        });\n    };\n\n    handlePassChange(evt) {\n        this.setState({\n            password: evt.target.value,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"login_wrapper\">\n                <div>\n                    <form onSubmit={this.handleSubmit}>\n                        {\n                            this.state.error &&\n                            <p class=\"error\" data-test=\"error\">{this.state.error}</p>\n                        }\n                        <input type=\"text\" className=\"form_input\" data-test=\"username\" id=\"user-name\" placeholder=\"Username\"\n                            value={this.state.username} onChange={this.handleUserChange} autoCorrect=\"off\" autoCapitalize=\"none\" />\n                        <input type=\"password\" className=\"form_input\" data-test=\"password\" id=\"password\" placeholder=\"Password\"\n                            value={this.state.password} onChange={this.handlePassChange} autoCorrect=\"off\" autoCapitalize=\"none\" />\n                        <input type=\"submit\" className=\"btn_action\" value=\"LOGIN\" />\n                    </form>\n                </div></div>\n        );\n    }\n}\n\nexport default Login;","import React from 'react'\nclass NotFound extends React.Component {\n  render() {\n    return <h1>Uups! Page not found!</h1>\n  }\n}\nexport default NotFound","import React from 'react'\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport cartIcon from './../img/cart-2.svg';\n\nclass AppHeader extends React.Component {\n  render() {\n    return (\n      <Navbar collapseOnSelect expand=\"sm\" bg=\"light\" variant=\"light\" sticky=\"top\">\n        <Navbar.Brand href=\"/\">Demo Shop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\" />\n          <Nav>\n            <Nav.Link href=\"/cart\"><img\n              src={cartIcon}\n              width=\"20\"\n              height=\"20\"\n              className=\"d-inline-block align-top\"\n              alt=\"Cart\"\n            /></Nav.Link>\n            <NavDropdown title=\"Me\" id=\"collasible-nav-dropdown\" drop=\"left\">\n              <NavDropdown.Item href=\"/account\">My account</NavDropdown.Item>\n              <NavDropdown.Item href=\"/wishlist\">Wishlist</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"/logout\">Logout</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\nexport default AppHeader","import React from 'react'\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport cartIcon from './../img/cart-2.svg';\n\nclass AppFooter extends React.Component {\n  render() {\n    return (\n      <Navbar sticky=\"bottom\" >Footer</Navbar>\n    )\n  }\n}\nexport default AppFooter","import React, { Component } from 'react';\nimport './css/App.css';\nimport { Route, HashRouter } from 'react-router-dom';\nimport Products from './components/products'\nimport Product from './components/product'\nimport Contact from './components/contact'\nimport Login from './components/login'\nimport Notfound from './components/notfound'\nimport AppHeader from './components/app-header'\nimport AppFooter from './components/app-footer'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <AppHeader />\n        <HashRouter>\n          <Route exact path={'/'} component={Products} />\n          <Route path={'/login'} component={Login} />\n          <Route path={'/products'} component={Products} />\n          <Route path={'/product/:id'} component={Product} />\n          <Route path={'/contact'} component={Contact} />\n          <Route component={Notfound} />\n        </HashRouter>\n        <AppFooter />\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}